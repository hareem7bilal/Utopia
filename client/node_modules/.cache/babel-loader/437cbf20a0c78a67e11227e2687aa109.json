{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Documents\\\\Desktop\\\\social media application\\\\client\\\\src\\\\pages\\\\messenger\\\\messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport './messenger.css';\nimport Topbar from \"../../components/topbar/topbar\";\nimport Chat from '../../components/chat/chat';\nimport Message from '../../components/message/message';\nimport Chatonline from '../../components/chatonline/chatonline';\nimport { AuthContext } from '../../context/authContext';\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messenger() {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [msgs, setMsgs] = useState([]);\n  const [newMsg, setNewMsg] = useState(\"\");\n  const socket = useRef(io(\"ws://http:localhost:8900\"));\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {}, []);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.on(\"welcome\", msg => {\n      console.log(msg);\n    });\n  }, [socket]);\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const res = await axios.get(\"/chats/\" + user._id);\n        setChats(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchChats();\n  }, [user._id]);\n  useEffect(() => {\n    const fetchMsgs = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMsgs(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchMsgs();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const msg = {\n      sender: user._id,\n      text: newMsg,\n      ChatID: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", msg);\n      setMsgs([...msgs, res.data]);\n      setNewMsg(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [msgs]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(chat),\n            children: /*#__PURE__*/_jsxDEV(Chat, {\n              c: chat,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: msgs.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  m: msg,\n                  own: msg.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write something...\",\n                className: \"chatMsgInput\",\n                onChange: e => setNewMsg(e.target.value),\n                value: newMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSendButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noChatText\",\n            children: \"Start Chatting!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(Chatonline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"U2Wt9GI0gsYWvdhHbgEG8utgP8Q=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/Ahmed/Documents/Desktop/social media application/client/src/pages/messenger/messenger.jsx"],"names":["Topbar","Chat","Message","Chatonline","AuthContext","useContext","useEffect","useState","useRef","io","axios","Messenger","chats","setChats","currentChat","setCurrentChat","msgs","setMsgs","newMsg","setNewMsg","socket","user","scrollRef","on","msg","console","log","fetchChats","res","get","_id","data","err","fetchMsgs","handleSubmit","e","preventDefault","sender","text","ChatID","post","current","scrollIntoView","behavior","map","chat","target","value"],"mappings":"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","sourcesContent":["import './messenger.css'\r\nimport Topbar from \"../../components/topbar/topbar\";\r\nimport Chat from '../../components/chat/chat';\r\nimport Message from '../../components/message/message';\r\nimport Chatonline from '../../components/chatonline/chatonline';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport {useContext,useEffect,useState,useRef} from \"react\";\r\nimport {io} from \"socket.io-client\"\r\nimport axios from 'axios';\r\n\r\nfunction Messenger() {\r\n    const [chats, setChats]=useState([])\r\n    const [currentChat, setCurrentChat]=useState(null)\r\n    const [msgs, setMsgs]=useState([])\r\n    const [newMsg,setNewMsg]=useState(\"\")\r\n    const socket=useRef(io(\"ws://http:localhost:8900\"))\r\n    const {user}=useContext(AuthContext)\r\n    const scrollRef=useRef()\r\n\r\n    useEffect(()=>{\r\n    \r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    socket?.on(\"welcome\", msg=>{\r\n      console.log(msg)\r\n    })\r\n},[socket])\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchChats=async()=>{\r\n            try{\r\n                const res=await axios.get(\"/chats/\"+user._id)\r\n                setChats(res.data)\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchChats()  \r\n    },[user._id])\r\n\r\n    useEffect(()=>{\r\n        const fetchMsgs=async()=>{\r\n            try{\r\n                const res=await axios.get(\"/messages/\"+currentChat?._id)\r\n                setMsgs(res.data)\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchMsgs()  \r\n    },[currentChat])\r\n\r\n    const handleSubmit=async(e)=>{\r\n      e.preventDefault();\r\n      const msg={\r\n        sender:user._id,\r\n        text:newMsg,\r\n        ChatID:currentChat._id\r\n      }\r\n\r\n      try{\r\n        const res=await axios.post(\"/messages\",msg)\r\n        setMsgs([...msgs,res.data])\r\n        setNewMsg(\"\")\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    useEffect(()=>{\r\n     scrollRef.current?.scrollIntoView({behavior:\"smooth\"})\r\n  },[msgs])\r\n\r\n\r\n    return (\r\n      <>\r\n        <Topbar />\r\n        <div className=\"messenger\">\r\n          <div className=\"chatMenu\">\r\n            <div className=\"chatMenuWrapper\">\r\n              <input\r\n                placeholder=\"Search for friends\"\r\n                className=\"chatMenuInput\"\r\n              />\r\n              {chats.map((chat) => (\r\n                <div onClick={() => setCurrentChat(chat)}>\r\n                  <Chat c={chat} currentUser={user} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatBox\">\r\n            <div className=\"chatBoxWrapper\">\r\n              {currentChat ? (\r\n                <>\r\n                  <div className=\"chatBoxTop\">\r\n                      {msgs.map(msg=>(\r\n                        <div ref={scrollRef}>\r\n                           <Message m={msg} own={msg.sender===user._id}/>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                  <div className=\"chatBoxBottom\">\r\n                    <textarea\r\n                      placeholder=\"Write something...\"\r\n                      className=\"chatMsgInput\"\r\n                      onChange={(e)=>setNewMsg(e.target.value)}\r\n                      value={newMsg}\r\n                    ></textarea>\r\n                    <button className=\"chatSendButton\" onClick={handleSubmit}>Send</button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <span className=\"noChatText\">Start Chatting!</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatOnline\">\r\n            <div className=\"chatOnlineWrapper\">\r\n              <Chatonline />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Messenger\r\n"]},"metadata":{},"sourceType":"module"}