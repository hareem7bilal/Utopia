{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Documents\\\\Desktop\\\\social media application\\\\client\\\\src\\\\pages\\\\messenger\\\\messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/topbar\";\nimport Chat from \"../../components/chat/chat\";\nimport Message from \"../../components/message/message\";\nimport Chatonline from \"../../components/chatonline/chatonline\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messenger() {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [msgs, setMsgs] = useState([]);\n  const [arrivalMsg, setArrivalMsg] = useState(null);\n  const [newMsg, setNewMsg] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMsg\", data => {\n      setArrivalMsg({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMsg && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.participants.includes(arrivalMsg.sender)) && setMsgs(prev => [...prev, arrivalMsg]);\n  }, [arrivalMsg, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(user.following.filter(f));\n      console.log(users);\n    });\n  }, [user]);\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const res = await axios.get(\"/chats/\" + user._id);\n        setChats(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchChats();\n  }, [user._id]);\n  useEffect(() => {\n    const fetchMsgs = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMsgs(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchMsgs();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const msg = {\n      sender: user._id,\n      text: newMsg,\n      ChatID: currentChat._id\n    };\n    const recieverId = currentChat.participants.find(p => p != user._id);\n    socket.current.emit(\"sendMsg\", {\n      senderId: user._id,\n      recieverId,\n      text: newMsg\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", msg);\n      setMsgs([...msgs, res.data]);\n      setNewMsg(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [msgs]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(chat),\n            children: /*#__PURE__*/_jsxDEV(Chat, {\n              c: chat,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: msgs.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  m: msg,\n                  own: msg.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write something...\",\n                className: \"chatMsgInput\",\n                onChange: e => setNewMsg(e.target.value),\n                value: newMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSendButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noChatText\",\n            children: \"Start Chatting!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(Chatonline, {\n            onlineUsers: onlineUsers,\n            currentUserId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"dXnr+nf64+xEMcEKn2+BZZYsIgQ=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/Ahmed/Documents/Desktop/social media application/client/src/pages/messenger/messenger.jsx"],"names":["Topbar","Chat","Message","Chatonline","AuthContext","useContext","useEffect","useState","useRef","io","axios","Messenger","chats","setChats","currentChat","setCurrentChat","msgs","setMsgs","arrivalMsg","setArrivalMsg","newMsg","setNewMsg","onlineUsers","setOnlineUsers","socket","user","scrollRef","current","on","data","sender","senderId","text","createdAt","Date","now","participants","includes","prev","emit","_id","users","following","filter","f","console","log","fetchChats","res","get","err","fetchMsgs","handleSubmit","e","preventDefault","msg","ChatID","recieverId","find","p","post","scrollIntoView","behavior","map","chat","target","value"],"mappings":"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","sourcesContent":["import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/topbar\";\r\nimport Chat from \"../../components/chat/chat\";\r\nimport Message from \"../../components/message/message\";\r\nimport Chatonline from \"../../components/chatonline/chatonline\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nfunction Messenger() {\r\n  const [chats, setChats] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [arrivalMsg, setArrivalMsg] = useState(null);\r\n  const [newMsg, setNewMsg] = useState(\"\");\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const socket = useRef();\r\n  const { user } = useContext(AuthContext);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8900\");\r\n    socket.current.on(\"getMsg\", (data) => {\r\n      setArrivalMsg({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMsg &&\r\n      currentChat?.participants.includes(arrivalMsg.sender) &&\r\n      setMsgs((prev) => [...prev, arrivalMsg]);\r\n  }, [arrivalMsg, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", user._id);\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(user.following.filter(f));\r\n      console.log(users)\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      try {\r\n        const res = await axios.get(\"/chats/\" + user._id);\r\n        setChats(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchChats();\r\n  }, [user._id]);\r\n\r\n  useEffect(() => {\r\n    const fetchMsgs = async () => {\r\n      try {\r\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\r\n        setMsgs(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchMsgs();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const msg = {\r\n      sender: user._id,\r\n      text: newMsg,\r\n      ChatID: currentChat._id,\r\n    };\r\n\r\n    const recieverId = currentChat.participants.find((p) => p != user._id);\r\n    socket.current.emit(\"sendMsg\", {\r\n      senderId: user._id,\r\n      recieverId,\r\n      text: newMsg,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/messages\", msg);\r\n      setMsgs([...msgs, res.data]);\r\n      setNewMsg(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [msgs]);\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\r\n            {chats.map((chat) => (\r\n              <div onClick={() => setCurrentChat(chat)}>\r\n                <Chat c={chat} currentUser={user} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxTop\">\r\n                  {msgs.map((msg) => (\r\n                    <div ref={scrollRef}>\r\n                      <Message m={msg} own={msg.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    placeholder=\"Write something...\"\r\n                    className=\"chatMsgInput\"\r\n                    onChange={(e) => setNewMsg(e.target.value)}\r\n                    value={newMsg}\r\n                  ></textarea>\r\n                  <button className=\"chatSendButton\" onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noChatText\">Start Chatting!</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatOnline\">\r\n          <div className=\"chatOnlineWrapper\">\r\n            <Chatonline\r\n              onlineUsers={onlineUsers}\r\n              currentUserId={user._id}\r\n              setCurrentChat={setCurrentChat}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Messenger;\r\n"]},"metadata":{},"sourceType":"module"}