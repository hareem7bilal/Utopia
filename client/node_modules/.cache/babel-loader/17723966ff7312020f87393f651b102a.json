{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Documents\\\\Desktop\\\\social media application\\\\client\\\\src\\\\pages\\\\messenger\\\\messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport './messenger.css';\nimport Topbar from \"../../components/topbar/topbar\";\nimport Chat from '../../components/chat/chat';\nimport Message from '../../components/message/message';\nimport Chatonline from '../../components/chatonline/chatonline';\nimport { AuthContext } from '../../context/authContext';\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messenger() {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [msgs, setMsgs] = useState([]);\n  const [arrivalMsg, setArrivalMsg] = useState(null);\n  const [newMsg, setNewMsg] = useState(\"\");\n  const socket = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMsg\", data => {\n      setArrivalMsg({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMsg;\n  }, [arrivalMsg]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(users);\n    });\n  }, [user]);\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const res = await axios.get(\"/chats/\" + user._id);\n        setChats(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchChats();\n  }, [user._id]);\n  useEffect(() => {\n    const fetchMsgs = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMsgs(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchMsgs();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const msg = {\n      sender: user._id,\n      text: newMsg,\n      ChatID: currentChat._id\n    };\n    const recieverId = currentChat.participants.find(p => p != user._id);\n    socket.current.emit(\"sendMsg\", {\n      senderId: user._id,\n      recieverId,\n      text: newMsg\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", msg);\n      setMsgs([...msgs, res.data]);\n      setNewMsg(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [msgs]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(chat),\n            children: /*#__PURE__*/_jsxDEV(Chat, {\n              c: chat,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: msgs.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  m: msg,\n                  own: msg.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write something...\",\n                className: \"chatMsgInput\",\n                onChange: e => setNewMsg(e.target.value),\n                value: newMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSendButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noChatText\",\n            children: \"Start Chatting!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(Chatonline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"O0U69f+a0bUZZSAvNohNFMIBfFc=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/Ahmed/Documents/Desktop/social media application/client/src/pages/messenger/messenger.jsx"],"names":["Topbar","Chat","Message","Chatonline","AuthContext","useContext","useEffect","useState","useRef","io","axios","Messenger","chats","setChats","currentChat","setCurrentChat","msgs","setMsgs","arrivalMsg","setArrivalMsg","newMsg","setNewMsg","socket","user","scrollRef","current","on","data","sender","senderId","text","createdAt","Date","now","emit","_id","users","console","log","fetchChats","res","get","err","fetchMsgs","handleSubmit","e","preventDefault","msg","ChatID","recieverId","participants","find","p","post","scrollIntoView","behavior","map","chat","target","value"],"mappings":"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","sourcesContent":["import './messenger.css'\r\nimport Topbar from \"../../components/topbar/topbar\";\r\nimport Chat from '../../components/chat/chat';\r\nimport Message from '../../components/message/message';\r\nimport Chatonline from '../../components/chatonline/chatonline';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport {useContext,useEffect,useState,useRef} from \"react\";\r\nimport {io} from \"socket.io-client\"\r\nimport axios from 'axios';\r\n\r\nfunction Messenger() {\r\n    const [chats, setChats]=useState([])\r\n    const [currentChat, setCurrentChat]=useState(null)\r\n    const [msgs, setMsgs]=useState([])\r\n    const [arrivalMsg, setArrivalMsg]=useState(null)\r\n    const [newMsg,setNewMsg]=useState(\"\")\r\n    const socket=useRef()\r\n    const {user}=useContext(AuthContext)\r\n    const scrollRef=useRef()\r\n\r\n    useEffect(()=>{\r\n      socket.current=io(\"ws://localhost:8900\");\r\n      socket.current.on(\"getMsg\",data=>{\r\n        setArrivalMsg({\r\n          sender:data.senderId,\r\n          text:data.text,\r\n          createdAt:Date.now()\r\n        })\r\n      })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      arrivalMsg\r\n\r\n    },[arrivalMsg])\r\n  \r\n    useEffect(()=>{\r\n    socket.current.emit(\"addUser\",user._id);\r\n    socket.current.on(\"getUsers\",users=>{\r\n      console.log(users)\r\n    });\r\n  },[user])\r\n\r\n    useEffect(()=>{\r\n        const fetchChats=async()=>{\r\n            try{\r\n                const res=await axios.get(\"/chats/\"+user._id)\r\n                setChats(res.data)\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchChats()  \r\n    },[user._id])\r\n\r\n    useEffect(()=>{\r\n        const fetchMsgs=async()=>{\r\n            try{\r\n                const res=await axios.get(\"/messages/\"+currentChat?._id)\r\n                setMsgs(res.data)\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchMsgs()  \r\n    },[currentChat])\r\n\r\n    const handleSubmit=async(e)=>{\r\n      e.preventDefault();\r\n      const msg={\r\n        sender:user._id,\r\n        text:newMsg,\r\n        ChatID:currentChat._id\r\n      }\r\n\r\n      const recieverId=currentChat.participants.find(p=>p!=user._id)\r\n\r\n      socket.current.emit(\"sendMsg\",{senderId:user._id,recieverId,text:newMsg})\r\n\r\n      try{\r\n        const res=await axios.post(\"/messages\",msg)\r\n        setMsgs([...msgs,res.data])\r\n        setNewMsg(\"\")\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n     scrollRef.current?.scrollIntoView({behavior:\"smooth\"})\r\n  },[msgs])\r\n\r\n\r\n    return (\r\n      <>\r\n        <Topbar />\r\n        <div className=\"messenger\">\r\n          <div className=\"chatMenu\">\r\n            <div className=\"chatMenuWrapper\">\r\n              <input\r\n                placeholder=\"Search for friends\"\r\n                className=\"chatMenuInput\"\r\n              />\r\n              {chats.map((chat) => (\r\n                <div onClick={() => setCurrentChat(chat)}>\r\n                  <Chat c={chat} currentUser={user} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatBox\">\r\n            <div className=\"chatBoxWrapper\">\r\n              {currentChat ? (\r\n                <>\r\n                  <div className=\"chatBoxTop\">\r\n                      {msgs.map(msg=>(\r\n                        <div ref={scrollRef}>\r\n                           <Message m={msg} own={msg.sender===user._id}/>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                  <div className=\"chatBoxBottom\">\r\n                    <textarea\r\n                      placeholder=\"Write something...\"\r\n                      className=\"chatMsgInput\"\r\n                      onChange={(e)=>setNewMsg(e.target.value)}\r\n                      value={newMsg}\r\n                    ></textarea>\r\n                    <button className=\"chatSendButton\" onClick={handleSubmit}>Send</button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <span className=\"noChatText\">Start Chatting!</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatOnline\">\r\n            <div className=\"chatOnlineWrapper\">\r\n              <Chatonline />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Messenger\r\n"]},"metadata":{},"sourceType":"module"}